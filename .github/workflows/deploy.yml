name: CI/CD Pipeline

on:
  push:
    branches-ignore:
      - documents # Exclude pushes to the "documents" branch

jobs:
  build-and-test:
    runs-on: self-hosted # Use Windows runner
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: Code/Frontend/package-lock.json # Ensure correct caching

      - name: Install Dependencies
        working-directory: ./Code/Frontend
        run: npm i

      - name: Build the Project
        working-directory: ./Code/Frontend
        run: npm run build

      - name: Run Unit Tests
        working-directory: ./Code/Frontend
        run: npm run test:unit

  docker-build-and-push:
    needs: build-and-test
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up QEMU for multi-arch builds
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry (Windows)
        shell: pwsh
        run: |
          echo '${{ secrets.GHCR_PAT }}' | docker login ghcr.io -u 'TechXplorerFR' --password-stdin

      - name: Build and Push Multi-Arch Docker Image
        shell: pwsh
        run: |
          docker buildx create --use
          # Fix: Using proper PowerShell line continuation with backticks and correct Dockerfile path
          docker buildx build --platform linux/amd64,linux/arm64 `
            -t ghcr.io/techxplorerfr/test-actions/myapp:latest `
            -f ./Code/Frontend/Dockerfile . --push

      - name: Make Docker Image Public
        shell: pwsh
        run: |
          $headers = @{
            "Authorization" = "Bearer ${{ secrets.GHCR_PAT }}"
            "Accept" = "application/vnd.github.v3+json"
          }
          $body = '{"visibility":"public"}'

          Invoke-RestMethod -Uri "https://api.github.com/user/packages/container/test-actions%2Fmyapp" -Method Patch -Headers $headers -Body $body -ContentType "application/json"

          if ($LASTEXITCODE -ne 0) {
              Write-Host "❌ Failed to make Docker image public"
              exit 1
          } else {
              Write-Host "✅ Docker image successfully made public"
          }
